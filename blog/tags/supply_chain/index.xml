<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Supply_chain on Jordan Wright</title>
    <link>https://jordan-wright.com/blog/tags/supply_chain/</link>
    <description>Recent content in Supply_chain on Jordan Wright</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Nov 2020 06:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://jordan-wright.com/blog/tags/supply_chain/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hunting for Malicious Packages on PyPI</title>
      <link>https://jordan-wright.com/blog/post/2020-11-12-hunting-for-malicious-packages-on-pypi/</link>
      <pubDate>Thu, 12 Nov 2020 06:00:00 -0500</pubDate>
      
      <guid>https://jordan-wright.com/blog/post/2020-11-12-hunting-for-malicious-packages-on-pypi/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://jordan-wright.com/blog/blog/images/headers/svg/ossmalware.svg&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;br&gt;
About a year ago, the Python Software Foundation &lt;a href=&#34;https://discuss.python.org/t/what-methods-should-we-implement-to-detect-malicious-content/2240&#34;&gt;opened a Request for Information (RFI)&lt;/a&gt; to discuss how we could detect malicious packages being uploaded to PyPI. Whether it&amp;rsquo;s &lt;a href=&#34;https://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&#34;&gt;taking over abandoned packages&lt;/a&gt;, &lt;a href=&#34;https://github.com/dateutil/dateutil/issues/984&#34;&gt;typosquatting on popular libraries&lt;/a&gt;, or &lt;a href=&#34;https://github.com/ChALkeR/notes/blob/master/Gathering-weak-npm-credentials.md&#34;&gt;hijacking packages using credential stuffing&lt;/a&gt;, it&amp;rsquo;s clear this is a real issue affecting nearly every package manager.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>